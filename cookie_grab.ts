// button making stuff
const downloadBtn = document.createElement('button');
downloadBtn.innerText = 'Download current cookies';
downloadBtn.id = 'download';

async function grabCookies() {

    // chrome API makes this part easy
    let cookies = await chrome.cookies.getAll({});

    // code here for putting the cookies retrieved into netscape format
    // apparently, a header is a good thing to include because some tools expect it
    //  when parsing these files:
    let file_content = "# Netscape HTTP Cookie File\n";
    file_content += "# This file was generated by a chrome extension\n";
    file_content += "# Format: domain\tsubdomains\tpath\thttpsOnly\tttl\tname\tvalue\n";
    for (let i = 0; i< cookies.length; i++) {
        file_content += cookies[i].domain + "\t";
        if (cookies[i].hostOnly == false) {
            file_content += "TRUE\t";   
        } else {
            file_content += "FALSE\t";
        }
        file_content += cookies[i].path + "\t";
        if (cookies[i].httpOnly == false) {
            file_content += "FALSE\t";   
        } else {
            file_content += "TRUE\t";
        }
        file_content += ((Math.floor(cookies[i].expirationDate) as unknown) as string) + "\t";
        file_content += cookies[i].name + "\t"
        file_content += cookies[i].value + "\n"
    };

    // code here for starting a file download for the cookies file
    const blob = new Blob([file_content], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "cookies.txt";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
};

// Bind our function and the button together
downloadBtn.addEventListener('click', grabCookies);
document.body.appendChild(downloadBtn);